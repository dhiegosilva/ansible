---
- name: Setup Alpine Linux for Docker, Docker Compose, Nginx Proxy Manager, and Automated Upgrades
  hosts: alpine
  become: true

  tasks:
    - name: Update repository to use the latest stable Alpine packages
      ansible.builtin.lineinfile:
        path: /etc/apk/repositories
        regexp: '^https://dl-cdn.alpinelinux.org/alpine/v[0-9\.]+/main$'
        line: 'https://dl-cdn.alpinelinux.org/alpine/latest-stable/main'
        state: present
      register: main_repo

    - name: Update community repository to use the latest stable Alpine packages
      ansible.builtin.lineinfile:
        path: /etc/apk/repositories
        regexp: '^https://dl-cdn.alpinelinux.org/alpine/v[0\.]+/community$'
        line: 'https://dl-cdn.alpinelinux.org/alpine/latest-stable/community'
        state: present
      register: community_repo

    - name: Run apk update if repositories were modified
      ansible.builtin.command: apk update
      when: main_repo.changed or community_repo.changed

    - name: Install Docker and Docker Compose
      ansible.builtin.apk:
        name:
          - docker
          - docker-compose
        update_cache: yes
        state: latest

    - name: Enable Docker service to start on boot
      ansible.builtin.service:
        name: docker
        enabled: true

    - name: Start Docker service
      ansible.builtin.service:
        name: docker
        state: started

    - name: Create a script to auto-upgrade and reboot if needed
      ansible.builtin.copy:
        dest: /usr/local/bin/auto_upgrade.sh
        mode: '0755'
        content: |
          #!/bin/sh
          # Update the package index
          apk update
          # Perform the upgrade
          if apk upgrade --available | grep -q "Upgraded"; then
            # If packages were upgraded, reboot
            echo "System upgraded, rebooting..."
            reboot
          else
            echo "No upgrades performed."
          fi

    - name: Schedule weekly cron job for auto-upgrade script
      ansible.builtin.cron:
        name: "Weekly auto-upgrade for Alpine Linux"
        job: "/usr/local/bin/auto_upgrade.sh"
        weekday: "0"  # Sunday
        hour: "3"     # 3:00 AM
        user: root
        state: present

    - name: Create necessary directories for Nginx Proxy Manager
      ansible.builtin.file:
        path: /opt/nginx-proxy-manager
        state: directory
        mode: '0755'

    - name: Create Docker Compose file for Nginx Proxy Manager and Watchtower
      ansible.builtin.copy:
        dest: /opt/nginx-proxy-manager/docker-compose.yml
        content: |
          services:
            nginx-proxy-manager:
              image: 'jc21/nginx-proxy-manager:latest'
              restart: unless-stopped
              ports:
                - '80:80'   # HTTP
                - '81:81'   # Admin interface
                - '443:443' # HTTPS
              environment:
                - INITIAL_ADMIN_EMAIL=dhiego.silva@hotmail.com
                - INITIAL_ADMIN_PASSWORD=f4x4d8p6
              volumes:
                - /opt/nginx-proxy-manager/data:/data
                - /opt/nginx-proxy-manager/letsencrypt:/etc/letsencrypt

            watchtower:
              image: containrrr/watchtower
              container_name: watchtower
              volumes:
                - /var/run/docker.sock:/var/run/docker.sock
              restart: unless-stopped
              command: --cleanup --schedule "0 0 4 * * *"

    - name: Start Nginx Proxy Manager and Watchtower services using Docker Compose
      ansible.builtin.command:
        cmd: "docker-compose -f /opt/nginx-proxy-manager/docker-compose.yml up -d"
        chdir: /opt/nginx-proxy-manager

    - name: Ensure Docker Compose is restarted if Compose file changes
      ansible.builtin.command:
        cmd: "docker-compose -f /opt/nginx-proxy-manager/docker-compose.yml restart"
        chdir: /opt/nginx-proxy-manager
      when: "docker_compose_file_changed is defined and docker_compose_file_changed"
