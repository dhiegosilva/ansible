---
- name: Setup Alpine Linux for Podman and Automated Upgrades
  hosts: alpine
  become: true

  tasks:
    - name: Update repository to use the latest stable Alpine packages
      ansible.builtin.lineinfile:
        path: /etc/apk/repositories
        regexp: '^https://dl-cdn.alpinelinux.org/alpine/v[0-9\.]+/main$'
        line: 'https://dl-cdn.alpinelinux.org/alpine/latest-stable/main'
        state: present
      register: main_repo

    - name: Update community repository to use the latest stable Alpine packages
      ansible.builtin.lineinfile:
        path: /etc/apk/repositories
        regexp: '^https://dl-cdn.alpinelinux.org/alpine/v[0-9\.]+/community$'
        line: 'https://dl-cdn.alpinelinux.org/alpine/latest-stable/community'
        state: present
      register: community_repo

    - name: Run apk update if repositories were modified
      ansible.builtin.command: apk update
      when: main_repo.changed or community_repo.changed

    - name: Install dependencies for Podman and Podman Compose
      ansible.builtin.apk:
        name:
          - podman
          - podman-compose
          - fuse-overlayfs
          - shadow  # for usermod if needed
        update_cache: yes
        state: present

    - name: Enable and start Podman service
      ansible.builtin.shell: |
        rc-update add podman default
        rc-service podman start
      args:
        executable: /bin/sh

    - name: Verify Podman installation
      ansible.builtin.command: podman --version
      register: podman_version
      changed_when: false

    - name: Display Podman version
      ansible.builtin.debug:
        msg: "Podman version: {{ podman_version.stdout }}"

    - name: Create a script to auto-upgrade and reboot if needed
      ansible.builtin.copy:
        dest: /usr/local/bin/auto_upgrade.sh
        mode: '0755'
        content: |
          #!/bin/sh
          # Update the package index
          apk update
          # Perform the upgrade
          if apk upgrade --available | grep -q "Upgraded"; then
            # If packages were upgraded, reboot
            echo "System upgraded, rebooting..."
            reboot
          else
            echo "No upgrades performed."
          fi

    - name: Schedule weekly cron job for auto-upgrade script
      ansible.builtin.cron:
        name: "Weekly auto-upgrade for Alpine Linux"
        job: "/usr/local/bin/auto_upgrade.sh"
        weekday: "0"  # Sunday
        hour: "3"     # 3:00 AM
        user: root
        state: present
