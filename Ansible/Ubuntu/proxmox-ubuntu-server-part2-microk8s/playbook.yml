---
- hosts: all
  become: true
  vars:
    user_password: "f4x4d8p6"

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install snapd
      apt:
        name: snapd
        state: present

    - name: Ensure classic snap support is enabled
      command: "ln -s /var/lib/snapd/snap /snap"
      args:
        creates: /snap/snap

    - name: Set keyboard layout to German
      copy:
        dest: /etc/default/keyboard
        content: |
          XKBMODEL="pc105"
          XKBLAYOUT="de"
          XKBVARIANT=""
          XKBOPTIONS=""
      notify:
        - Reload keyboard configuration

    - name: Install chrony for time synchronization
      apt:
        name: chrony
        state: present

    - name: Configure chrony for ntp.ubuntu.com
      lineinfile:
        path: /etc/chrony/chrony.conf
        line: "server ntp.ubuntu.com iburst"
        state: present
      notify:
        - Restart chrony

    - name: Install microk8s
      snap:
        name: microk8s
        classic: yes
        state: present
        channel: 1.31/stable

    - name: Ensure user dhiego exists
      user:
        name: dhiego
        state: present

    - name: Change password for user dhiego
      user:
        name: dhiego
        password: "{{ user_password | password_hash('sha512') }}"

    - name: Change password for user root
      user:
        name: root
        password: "{{ user_password | password_hash('sha512') }}"

    - name: Add user dhiego to microk8s group
      user:
        name: dhiego
        groups: microk8s
        append: yes

    - name: Ensure br_netfilter module is loaded
      modprobe:
        name: br_netfilter
        state: present

    - name: Ensure br_netfilter module is loaded on boot
      copy:
        dest: /etc/modules-load.d/k8s.conf
        content: |
          br_netfilter

    - name: Configure sysctl for Kubernetes networking
      lineinfile:
        path: /etc/sysctl.conf
        line: "net.bridge.bridge-nf-call-iptables=1"
        state: present
      notify:
        - Reload sysctl

    - name: Enable ip6tables for bridged IPv6 traffic
      lineinfile:
        path: /etc/sysctl.conf
        line: "net.bridge.bridge-nf-call-ip6tables=1"
        state: present
      notify:
        - Reload sysctl

    - name: Install unattended-upgrades package
      apt:
        name: unattended-upgrades
        state: present

    - name: Enable unattended-upgrades
      command: dpkg-reconfigure --priority=low unattended-upgrades
      args:
        creates: /etc/apt/apt.conf.d/20auto-upgrades

    - name: Install guest agent
      apt:
        name: qemu-guest-agent
        state: present

    - name: Ensure guest agent service is running
      service:
        name: qemu-guest-agent
        state: started
        enabled: true

  handlers:
    - name: Reload sysctl
      command: sysctl -p

    - name: Reload keyboard configuration
      command: setupcon

    - name: Restart chrony
      service:
        name: chrony
        state: restarted


- hosts: master
  become: true
  tasks:
    - name: Wait for MicroK8s API to be ready
      command: microk8s status --wait-ready

    # Generate a stable join command with a custom token and a longer TTL to avoid expiration
    - name: Initialize the MicroK8s master and capture join command
      command: microk8s add-node --token 0123456789abcdef0123456789abcdef --token-ttl 120
      register: join_command

    - name: Debug raw output from add-node
      debug:
        var: join_command.stdout_lines

    - name: Extract the actual join command
      set_fact:
        actual_join_command: >-
          {{ join_command.stdout_lines | select("search", "^microk8s join") | list | first }}

    - name: Debug the extracted join command
      debug:
        var: actual_join_command

    - name: Share the actual join command with workers
      set_fact:
        worker_join_command: "{{ actual_join_command }}"
      delegate_to: 127.0.0.1

    - name: Enable DNS addon
      command: microk8s enable dns

    - name: Enable high availability
      command: microk8s enable ha-cluster

    - name: Get node name
      command: microk8s kubectl get nodes -o jsonpath='{.items[0].metadata.name}'
      register: node_name

    - name: Label master node
      command: microk8s kubectl label node {{ node_name.stdout }} role=master


- hosts: workers
  become: true
  tasks:
    - name: Wait for MicroK8s API to be ready on worker
      command: microk8s status --wait-ready
      register: worker_status
      failed_when: false
      changed_when: false

    - name: Debug the join command received from master
      debug:
        var: hostvars[groups['master'][0]].worker_join_command

    - name: Join the MicroK8s cluster as a worker
      shell: "{{ hostvars[groups['master'][0]].worker_join_command }} --worker"
      register: join_result
      failed_when: join_result.rc != 0

    - name: Debug join result
      debug:
        var: join_result

    - name: Wait for MicroK8s API to be ready after join
      command: microk8s status --wait-ready

    - name: Label worker nodes
      command: microk8s kubectl label node {{ inventory_hostname }} role=worker


- hosts: all
  tasks:
    - name: Verify MicroK8s is running
      command: microk8s status --wait-ready

    - name: Check cluster status (master node only)
      command: microk8s kubectl get nodes
      when: "inventory_hostname in groups['master']"
